//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace Com.Lotos.BinbinDomainLanguage
{
	/// <summary>
	/// DomainClass DominDriveDesignModel
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("Com.Lotos.BinbinDomainLanguage.DominDriveDesignModel.DisplayName", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Com.Lotos.BinbinDomainLanguage.DominDriveDesignModel.Description", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("e2bc1f66-5f12-4981-af06-1685243770c9")]
	public partial class DominDriveDesignModel : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DominDriveDesignModel domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe2bc1f66, 0x5f12, 0x4981, 0xaf, 0x06, 0x16, 0x85, 0x24, 0x37, 0x70, 0xc9);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DominDriveDesignModel(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DominDriveDesignModel(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region AggregateRootEntity opposite domain role accessor
		
		/// <summary>
		/// Gets a list of AggregateRootEntity.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasAggregateRootEntity.DominDriveDesignModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<AggregateRootEntities> AggregateRootEntity
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<AggregateRootEntities>, AggregateRootEntities>(global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasAggregateRootEntity.DominDriveDesignModelDomainRoleId);
			}
		}
		#endregion
		#region EntityModels opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EntityModels.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasEntityModels.DominDriveDesignModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EntityModel> EntityModels
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EntityModel>, EntityModel>(global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasEntityModels.DominDriveDesignModelDomainRoleId);
			}
		}
		#endregion
		#region DomainServiceModels opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DomainServiceModels.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainServiceModels.DominDriveDesignModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DomainServiceModel> DomainServiceModels
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DomainServiceModel>, DomainServiceModel>(global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainServiceModels.DominDriveDesignModelDomainRoleId);
			}
		}
		#endregion
		#region FactoryModels opposite domain role accessor
		
		/// <summary>
		/// Gets a list of FactoryModels.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasFactoryModels.DominDriveDesignModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<FactoryModel> FactoryModels
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<FactoryModel>, FactoryModel>(global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasFactoryModels.DominDriveDesignModelDomainRoleId);
			}
		}
		#endregion
		#region ValueObjectModels opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ValueObjectModels.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasValueObjectModels.DominDriveDesignModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ValueObjectModel> ValueObjectModels
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ValueObjectModel>, ValueObjectModel>(global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasValueObjectModels.DominDriveDesignModelDomainRoleId);
			}
		}
		#endregion
		#region DomainEventModels opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DomainEventModels.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainEventModels.DominDriveDesignModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DomainEventModel> DomainEventModels
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DomainEventModel>, DomainEventModel>(global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainEventModels.DominDriveDesignModelDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Com.Lotos.BinbinDomainLanguage.AggregateRootEntities.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Com.Lotos.BinbinDomainLanguage.EntityModel.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Com.Lotos.BinbinDomainLanguage.DomainServiceModel.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Com.Lotos.BinbinDomainLanguage.FactoryModel.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Com.Lotos.BinbinDomainLanguage.ValueObjectModel.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Com.Lotos.BinbinDomainLanguage.DomainEventModel.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Com.Lotos.BinbinDomainLanguage.AggregateRootEntities sourceAggregateRootEntities1 = sourceElement as global::Com.Lotos.BinbinDomainLanguage.AggregateRootEntities;
			if (sourceAggregateRootEntities1 != null)
			{
				// Create link for path DominDriveDesignModelHasAggregateRootEntity.AggregateRootEntity
				this.AggregateRootEntity.Add(sourceAggregateRootEntities1);

				return;
			}
				
			global::Com.Lotos.BinbinDomainLanguage.EntityModel sourceEntityModel2 = sourceElement as global::Com.Lotos.BinbinDomainLanguage.EntityModel;
			if (sourceEntityModel2 != null)
			{
				// Create link for path DominDriveDesignModelHasEntityModels.EntityModels
				this.EntityModels.Add(sourceEntityModel2);

				return;
			}
				
			global::Com.Lotos.BinbinDomainLanguage.DomainServiceModel sourceDomainServiceModel3 = sourceElement as global::Com.Lotos.BinbinDomainLanguage.DomainServiceModel;
			if (sourceDomainServiceModel3 != null)
			{
				// Create link for path DominDriveDesignModelHasDomainServiceModels.DomainServiceModels
				this.DomainServiceModels.Add(sourceDomainServiceModel3);

				return;
			}
				
			global::Com.Lotos.BinbinDomainLanguage.FactoryModel sourceFactoryModel4 = sourceElement as global::Com.Lotos.BinbinDomainLanguage.FactoryModel;
			if (sourceFactoryModel4 != null)
			{
				// Create link for path DominDriveDesignModelHasFactoryModels.FactoryModels
				this.FactoryModels.Add(sourceFactoryModel4);

				return;
			}
				
			global::Com.Lotos.BinbinDomainLanguage.ValueObjectModel sourceValueObjectModel5 = sourceElement as global::Com.Lotos.BinbinDomainLanguage.ValueObjectModel;
			if (sourceValueObjectModel5 != null)
			{
				// Create link for path DominDriveDesignModelHasValueObjectModels.ValueObjectModels
				this.ValueObjectModels.Add(sourceValueObjectModel5);

				return;
			}
				
			global::Com.Lotos.BinbinDomainLanguage.DomainEventModel sourceDomainEventModel6 = sourceElement as global::Com.Lotos.BinbinDomainLanguage.DomainEventModel;
			if (sourceDomainEventModel6 != null)
			{
				// Create link for path DominDriveDesignModelHasDomainEventModels.DomainEventModels
				this.DomainEventModels.Add(sourceDomainEventModel6);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Com.Lotos.BinbinDomainLanguage.AggregateRootEntities sourceAggregateRootEntities1 = sourceElement as global::Com.Lotos.BinbinDomainLanguage.AggregateRootEntities;
			if (sourceAggregateRootEntities1 != null)
			{
				// Delete link for path DominDriveDesignModelHasAggregateRootEntity.AggregateRootEntity
				
				foreach (DslModeling::ElementLink link in global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasAggregateRootEntity.GetLinks((global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModel)this, sourceAggregateRootEntities1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasAggregateRootEntity.DominDriveDesignModelDomainRoleId, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasAggregateRootEntity.AggregateRootEntitiesDomainRoleId);
				}

				return;
			}
				
			global::Com.Lotos.BinbinDomainLanguage.EntityModel sourceEntityModel2 = sourceElement as global::Com.Lotos.BinbinDomainLanguage.EntityModel;
			if (sourceEntityModel2 != null)
			{
				// Delete link for path DominDriveDesignModelHasEntityModels.EntityModels
				
				foreach (DslModeling::ElementLink link in global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasEntityModels.GetLinks((global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModel)this, sourceEntityModel2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasEntityModels.DominDriveDesignModelDomainRoleId, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasEntityModels.EntityModelDomainRoleId);
				}

				return;
			}
				
			global::Com.Lotos.BinbinDomainLanguage.DomainServiceModel sourceDomainServiceModel3 = sourceElement as global::Com.Lotos.BinbinDomainLanguage.DomainServiceModel;
			if (sourceDomainServiceModel3 != null)
			{
				// Delete link for path DominDriveDesignModelHasDomainServiceModels.DomainServiceModels
				
				foreach (DslModeling::ElementLink link in global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainServiceModels.GetLinks((global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModel)this, sourceDomainServiceModel3))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainServiceModels.DominDriveDesignModelDomainRoleId, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainServiceModels.DomainServiceModelDomainRoleId);
				}

				return;
			}
				
			global::Com.Lotos.BinbinDomainLanguage.FactoryModel sourceFactoryModel4 = sourceElement as global::Com.Lotos.BinbinDomainLanguage.FactoryModel;
			if (sourceFactoryModel4 != null)
			{
				// Delete link for path DominDriveDesignModelHasFactoryModels.FactoryModels
				
				foreach (DslModeling::ElementLink link in global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasFactoryModels.GetLinks((global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModel)this, sourceFactoryModel4))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasFactoryModels.DominDriveDesignModelDomainRoleId, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasFactoryModels.FactoryModelDomainRoleId);
				}

				return;
			}
				
			global::Com.Lotos.BinbinDomainLanguage.ValueObjectModel sourceValueObjectModel5 = sourceElement as global::Com.Lotos.BinbinDomainLanguage.ValueObjectModel;
			if (sourceValueObjectModel5 != null)
			{
				// Delete link for path DominDriveDesignModelHasValueObjectModels.ValueObjectModels
				
				foreach (DslModeling::ElementLink link in global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasValueObjectModels.GetLinks((global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModel)this, sourceValueObjectModel5))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasValueObjectModels.DominDriveDesignModelDomainRoleId, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasValueObjectModels.ValueObjectModelDomainRoleId);
				}

				return;
			}
				
			global::Com.Lotos.BinbinDomainLanguage.DomainEventModel sourceDomainEventModel6 = sourceElement as global::Com.Lotos.BinbinDomainLanguage.DomainEventModel;
			if (sourceDomainEventModel6 != null)
			{
				// Delete link for path DominDriveDesignModelHasDomainEventModels.DomainEventModels
				
				foreach (DslModeling::ElementLink link in global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainEventModels.GetLinks((global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModel)this, sourceDomainEventModel6))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainEventModels.DominDriveDesignModelDomainRoleId, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainEventModels.DomainEventModelDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Com.Lotos.BinbinDomainLanguage
{
	/// <summary>
	/// DomainClass AggregateRootEntities
	/// Description for Com.Lotos.BinbinDomainLanguage.AggregateRootEntities
	/// </summary>
	[DslDesign::DisplayNameResource("Com.Lotos.BinbinDomainLanguage.AggregateRootEntities.DisplayName", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Com.Lotos.BinbinDomainLanguage.AggregateRootEntities.Description", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("0d1c6c9d-baee-482c-86c9-e69601a4a4d7")]
	public partial class AggregateRootEntities : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// AggregateRootEntities domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0d1c6c9d, 0xbaee, 0x482c, 0x86, 0xc9, 0xe6, 0x96, 0x01, 0xa4, 0xa4, 0xd7);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AggregateRootEntities(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AggregateRootEntities(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x3f4886e6, 0x3b6f, 0x4b95, 0xa4, 0x9c, 0x76, 0x26, 0xbd, 0x2f, 0xd1, 0xee);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Com.Lotos.BinbinDomainLanguage.AggregateRootEntities.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Com.Lotos.BinbinDomainLanguage.AggregateRootEntities/Name.DisplayName", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Com.Lotos.BinbinDomainLanguage.AggregateRootEntities/Name.Description", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("3f4886e6-3b6f-4b95-a49c-7626bd2fd1ee")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AggregateRootEntities.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<AggregateRootEntities, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AggregateRootEntities.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AggregateRootEntities.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(AggregateRootEntities element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AggregateRootEntities element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DominDriveDesignModel opposite domain role accessor
		/// <summary>
		/// Gets or sets DominDriveDesignModel.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasAggregateRootEntity.AggregateRootEntities
		/// </summary>
		public virtual DominDriveDesignModel DominDriveDesignModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasAggregateRootEntity.AggregateRootEntitiesDomainRoleId) as DominDriveDesignModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasAggregateRootEntity.AggregateRootEntitiesDomainRoleId, value);
			}
		}
		#endregion
		#region EntityModels opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EntityModels.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.AggregateRootEntitiesReferencesEntityModels.AggregateRootEntities
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EntityModel> EntityModels
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EntityModel>, EntityModel>(global::Com.Lotos.BinbinDomainLanguage.AggregateRootEntitiesReferencesEntityModels.AggregateRootEntitiesDomainRoleId);
			}
		}
		#endregion
	}
}
namespace Com.Lotos.BinbinDomainLanguage
{
	/// <summary>
	/// DomainClass ValueObjectModel
	/// Description for Com.Lotos.BinbinDomainLanguage.ValueObjectModel
	/// </summary>
	[DslDesign::DisplayNameResource("Com.Lotos.BinbinDomainLanguage.ValueObjectModel.DisplayName", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Com.Lotos.BinbinDomainLanguage.ValueObjectModel.Description", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("204c553c-af19-4e2e-b1b8-f8f29c192eb6")]
	public partial class ValueObjectModel : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ValueObjectModel domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x204c553c, 0xaf19, 0x4e2e, 0xb1, 0xb8, 0xf8, 0xf2, 0x9c, 0x19, 0x2e, 0xb6);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ValueObjectModel(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ValueObjectModel(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x3c1cc077, 0x0654, 0x46b7, 0xaf, 0x4e, 0x2f, 0x2f, 0x46, 0x1a, 0x01, 0x29);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Com.Lotos.BinbinDomainLanguage.ValueObjectModel.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Com.Lotos.BinbinDomainLanguage.ValueObjectModel/Name.DisplayName", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Com.Lotos.BinbinDomainLanguage.ValueObjectModel/Name.Description", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("3c1cc077-0654-46b7-af4e-2f2f461a0129")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ValueObjectModel.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<ValueObjectModel, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ValueObjectModel.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ValueObjectModel.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ValueObjectModel element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ValueObjectModel element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EntityModels opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EntityModels.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.EntityModelReferencesValueObjectModels.ValueObjectModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EntityModel> EntityModels
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EntityModel>, EntityModel>(global::Com.Lotos.BinbinDomainLanguage.EntityModelReferencesValueObjectModels.ValueObjectModelDomainRoleId);
			}
		}
		#endregion
		#region DominDriveDesignModel opposite domain role accessor
		/// <summary>
		/// Gets or sets DominDriveDesignModel.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasValueObjectModels.ValueObjectModel
		/// </summary>
		public virtual DominDriveDesignModel DominDriveDesignModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasValueObjectModels.ValueObjectModelDomainRoleId) as DominDriveDesignModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasValueObjectModels.ValueObjectModelDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Com.Lotos.BinbinDomainLanguage
{
	/// <summary>
	/// DomainClass EntityModel
	/// Description for Com.Lotos.BinbinDomainLanguage.EntityModel
	/// </summary>
	[DslDesign::DisplayNameResource("Com.Lotos.BinbinDomainLanguage.EntityModel.DisplayName", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Com.Lotos.BinbinDomainLanguage.EntityModel.Description", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("14e110ad-7df7-41d3-b89a-cf4eeb587b50")]
	public partial class EntityModel : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EntityModel domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x14e110ad, 0x7df7, 0x41d3, 0xb8, 0x9a, 0xcf, 0x4e, 0xeb, 0x58, 0x7b, 0x50);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EntityModel(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EntityModel(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0xc738df3c, 0x0e18, 0x4104, 0x85, 0x69, 0xca, 0xc7, 0x66, 0xd6, 0x26, 0xc5);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Com.Lotos.BinbinDomainLanguage.EntityModel.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Com.Lotos.BinbinDomainLanguage.EntityModel/Name.DisplayName", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Com.Lotos.BinbinDomainLanguage.EntityModel/Name.Description", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c738df3c-0e18-4104-8569-cac766d626c5")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EntityModel.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<EntityModel, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EntityModel.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EntityModel.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EntityModel element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EntityModel element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ValueObjectModels opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ValueObjectModels.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.EntityModelReferencesValueObjectModels.EntityModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ValueObjectModel> ValueObjectModels
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ValueObjectModel>, ValueObjectModel>(global::Com.Lotos.BinbinDomainLanguage.EntityModelReferencesValueObjectModels.EntityModelDomainRoleId);
			}
		}
		#endregion
		#region TargetEntityModels opposite domain role accessor
		
		/// <summary>
		/// Gets a list of TargetEntityModels.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.EntityModelReferencesTargetEntityModels.SourceEntityModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EntityModel> TargetEntityModels
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EntityModel>, EntityModel>(global::Com.Lotos.BinbinDomainLanguage.EntityModelReferencesTargetEntityModels.SourceEntityModelDomainRoleId);
			}
		}
		#endregion
		#region SourceEntityModels opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SourceEntityModels.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.EntityModelReferencesTargetEntityModels.TargetEntityModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EntityModel> SourceEntityModels
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EntityModel>, EntityModel>(global::Com.Lotos.BinbinDomainLanguage.EntityModelReferencesTargetEntityModels.TargetEntityModelDomainRoleId);
			}
		}
		#endregion
		#region AggregateRootEntity opposite domain role accessor
		
		/// <summary>
		/// Gets a list of AggregateRootEntity.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.AggregateRootEntitiesReferencesEntityModels.EntityModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<AggregateRootEntities> AggregateRootEntity
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<AggregateRootEntities>, AggregateRootEntities>(global::Com.Lotos.BinbinDomainLanguage.AggregateRootEntitiesReferencesEntityModels.EntityModelDomainRoleId);
			}
		}
		#endregion
		#region DominDriveDesignModel opposite domain role accessor
		/// <summary>
		/// Gets or sets DominDriveDesignModel.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasEntityModels.EntityModel
		/// </summary>
		public virtual DominDriveDesignModel DominDriveDesignModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasEntityModels.EntityModelDomainRoleId) as DominDriveDesignModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasEntityModels.EntityModelDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Com.Lotos.BinbinDomainLanguage
{
	/// <summary>
	/// DomainClass DomainServiceModel
	/// Description for Com.Lotos.BinbinDomainLanguage.DomainServiceModel
	/// </summary>
	[DslDesign::DisplayNameResource("Com.Lotos.BinbinDomainLanguage.DomainServiceModel.DisplayName", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Com.Lotos.BinbinDomainLanguage.DomainServiceModel.Description", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("679700eb-a7ff-4925-a9d3-d2463cc94592")]
	public partial class DomainServiceModel : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DomainServiceModel domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x679700eb, 0xa7ff, 0x4925, 0xa9, 0xd3, 0xd2, 0x46, 0x3c, 0xc9, 0x45, 0x92);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DomainServiceModel(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DomainServiceModel(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x84303db8, 0x1cb8, 0x484f, 0xb3, 0xa0, 0xd9, 0xf1, 0xec, 0xde, 0x4b, 0x30);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Com.Lotos.BinbinDomainLanguage.DomainServiceModel.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Com.Lotos.BinbinDomainLanguage.DomainServiceModel/Name.DisplayName", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Com.Lotos.BinbinDomainLanguage.DomainServiceModel/Name.Description", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("84303db8-1cb8-484f-b3a0-d9f1ecde4b30")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainServiceModel.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainServiceModel, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainServiceModel.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainServiceModel.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainServiceModel element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainServiceModel element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DominDriveDesignModel opposite domain role accessor
		/// <summary>
		/// Gets or sets DominDriveDesignModel.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainServiceModels.DomainServiceModel
		/// </summary>
		public virtual DominDriveDesignModel DominDriveDesignModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainServiceModels.DomainServiceModelDomainRoleId) as DominDriveDesignModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainServiceModels.DomainServiceModelDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Com.Lotos.BinbinDomainLanguage
{
	/// <summary>
	/// DomainClass FactoryModel
	/// Description for Com.Lotos.BinbinDomainLanguage.FactoryModel
	/// </summary>
	[DslDesign::DisplayNameResource("Com.Lotos.BinbinDomainLanguage.FactoryModel.DisplayName", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Com.Lotos.BinbinDomainLanguage.FactoryModel.Description", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("0a646c9f-548b-4b2e-9410-9bbf69a17761")]
	public partial class FactoryModel : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// FactoryModel domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0a646c9f, 0x548b, 0x4b2e, 0x94, 0x10, 0x9b, 0xbf, 0x69, 0xa1, 0x77, 0x61);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public FactoryModel(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public FactoryModel(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x6ef20c24, 0x696c, 0x42de, 0xb1, 0x5b, 0x80, 0x18, 0x09, 0xf1, 0x25, 0x84);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Com.Lotos.BinbinDomainLanguage.FactoryModel.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Com.Lotos.BinbinDomainLanguage.FactoryModel/Name.DisplayName", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Com.Lotos.BinbinDomainLanguage.FactoryModel/Name.Description", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("6ef20c24-696c-42de-b15b-801809f12584")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the FactoryModel.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<FactoryModel, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the FactoryModel.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the FactoryModel.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(FactoryModel element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(FactoryModel element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DominDriveDesignModel opposite domain role accessor
		/// <summary>
		/// Gets or sets DominDriveDesignModel.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasFactoryModels.FactoryModel
		/// </summary>
		public virtual DominDriveDesignModel DominDriveDesignModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasFactoryModels.FactoryModelDomainRoleId) as DominDriveDesignModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasFactoryModels.FactoryModelDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Com.Lotos.BinbinDomainLanguage
{
	/// <summary>
	/// DomainClass DomainEventModel
	/// Description for Com.Lotos.BinbinDomainLanguage.DomainEventModel
	/// </summary>
	[DslDesign::DisplayNameResource("Com.Lotos.BinbinDomainLanguage.DomainEventModel.DisplayName", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Com.Lotos.BinbinDomainLanguage.DomainEventModel.Description", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("ef69a92a-cd3f-4d1a-995f-f5b6090c5ea8")]
	public partial class DomainEventModel : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DomainEventModel domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xef69a92a, 0xcd3f, 0x4d1a, 0x99, 0x5f, 0xf5, 0xb6, 0x09, 0x0c, 0x5e, 0xa8);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DomainEventModel(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DomainEventModel(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x734d85d2, 0x00f3, 0x47b3, 0x8e, 0x08, 0x43, 0x9f, 0x3b, 0xad, 0x36, 0xc0);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Com.Lotos.BinbinDomainLanguage.DomainEventModel.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Com.Lotos.BinbinDomainLanguage.DomainEventModel/Name.DisplayName", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Com.Lotos.BinbinDomainLanguage.DomainEventModel/Name.Description", typeof(global::Com.Lotos.BinbinDomainLanguage.BinbinDomainLanguageDomainModel), "Com.Lotos.BinbinDomainLanguage.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("734d85d2-00f3-47b3-8e08-439f3bad36c0")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainEventModel.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainEventModel, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainEventModel.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainEventModel.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainEventModel element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainEventModel element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DominDriveDesignModel opposite domain role accessor
		/// <summary>
		/// Gets or sets DominDriveDesignModel.
		/// Description for
		/// Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainEventModels.DomainEventModel
		/// </summary>
		public virtual DominDriveDesignModel DominDriveDesignModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainEventModels.DomainEventModelDomainRoleId) as DominDriveDesignModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Com.Lotos.BinbinDomainLanguage.DominDriveDesignModelHasDomainEventModels.DomainEventModelDomainRoleId, value);
			}
		}
		#endregion
	}
}
